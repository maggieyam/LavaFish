{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/posts/create_post_form.js\";\nimport React from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './create_post_form.css';\nimport Loader from 'react-loader-spinner';\nimport { uploadFile } from 'react-s3';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst aws = require('../../config/aws');\n\nconst config = {\n  bucketName: aws.BUCKET_NAME,\n  region: 'us-east-1',\n  accessKeyId: aws.ID,\n  secretAccessKey: aws.SECRET\n};\n\nclass CreatePostForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.changeTitle = this.changeTitle.bind(this);\n    this.errors = this.errors.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loaderSpinner = this.loaderSpinner.bind(this);\n    this.fileLoader = /*#__PURE__*/React.createRef();\n    this.handleTag = this.handleTag.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTags();\n  }\n\n  changeTitle(e) {\n    e.preventDefault();\n    this.setState({\n      title: e.currentTarget.value\n    });\n  }\n\n  errors(field) {\n    if (this.props.errors[field]) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"posting-error\",\n        children: this.props.errors[field]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n\n    return;\n  }\n\n  handleTag(e, data) {\n    const bools = {};\n    data.value.map(category => bools[category] = true);\n    this.setState({\n      [data.placeholder.toLowerCase()]: bools\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const video = this.fileLoader.current.files[0];\n    this.props.loadingOn();\n    uploadFile(video, config).then(data => {\n      const post = {\n        title: this.state.title,\n        url: data.location,\n        nutrition: this.state.nutrition,\n        diet: this.state.diet,\n        ingredients: this.state.ingredients\n      };\n      this.props.createPost(post).then(() => {\n        this.props.loadingOff();\n        this.props.clearPostErrors();\n        this.props.history.push('/feed');\n      });\n    }).catch(err => {\n      this.props.loadingOff();\n      console.log(err);\n    });\n  }\n\n  loaderSpinner() {\n    if (this.props.loading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Grid\",\n        color: \"#ee82ee\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n\n    return;\n  }\n\n  optionify(category) {\n    const options = Object.keys(category).map(tag => {\n      return {\n        key: tag,\n        text: tag[0].toUpperCase() + tag.slice(1),\n        value: tag\n      };\n    });\n    options.pop();\n    return options;\n  }\n\n  render() {\n    if (!this.props.diet) return null;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: this.handleSubmit,\n      children: [this.loaderSpinner(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-input-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"post-title\",\n          children: \"Enter a title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"post-title\",\n          type: \"text\",\n          value: this.state.title,\n          onChange: this.changeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 8\n        }, this), this.errors(\"title\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vid-input-div\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"video-input\",\n          type: \"file\",\n          ref: this.fileLoader,\n          accept: \"video/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Diet/Restrictions:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Diet\",\n          fluid: true,\n          multiple: true,\n          search: true,\n          selection: true,\n          options: this.optionify(this.props.diet),\n          onChange: this.handleTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Nutrition:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Nutrition\",\n          fluid: true,\n          multiple: true,\n          search: true,\n          selection: true,\n          options: this.optionify(this.props.nutrition),\n          onChange: this.handleTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Ingredients\",\n          fluid: true,\n          multiple: true,\n          search: true,\n          selection: true,\n          options: this.optionify(this.props.ingredients),\n          onChange: this.handleTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"submit-post\",\n        type: \"submit\",\n        value: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreatePostForm;","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/posts/create_post_form.js"],"names":["React","Loader","uploadFile","Dropdown","aws","require","config","bucketName","BUCKET_NAME","region","accessKeyId","ID","secretAccessKey","SECRET","CreatePostForm","Component","constructor","props","state","title","changeTitle","bind","errors","handleSubmit","loaderSpinner","fileLoader","createRef","handleTag","componentDidMount","fetchTags","e","preventDefault","setState","currentTarget","value","field","data","bools","map","category","placeholder","toLowerCase","video","current","files","loadingOn","then","post","url","location","nutrition","diet","ingredients","createPost","loadingOff","clearPostErrors","history","push","catch","err","console","log","loading","optionify","options","Object","keys","tag","key","text","toUpperCase","slice","pop","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './create_post_form.css'\nimport Loader from 'react-loader-spinner';\nimport { uploadFile } from 'react-s3';\nimport { Dropdown } from 'semantic-ui-react';\nconst aws = require('../../config/aws');\n\nconst config = {\n  bucketName: aws.BUCKET_NAME,\n  region: 'us-east-1',\n  accessKeyId: aws.ID,\n  secretAccessKey: aws.SECRET,\n}\n\nclass CreatePostForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\" }\n    this.changeTitle = this.changeTitle.bind(this);\n    this.errors = this.errors.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loaderSpinner = this.loaderSpinner.bind(this);\n    this.fileLoader = React.createRef();\n    this.handleTag = this.handleTag.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.fetchTags()\n  }\n\n  \n  changeTitle(e){\n    e.preventDefault();\n    this.setState({title: e.currentTarget.value});\n  }\n\n  errors(field){\n    if (this.props.errors[field]) {\n      return <p className=\"posting-error\">{this.props.errors[field]}</p>\n    }\n    return \n  }\n\n  handleTag(e, data){\n    const bools = {};\n    data.value.map(category => bools[category] = true);\n    this.setState({[data.placeholder.toLowerCase()]: bools })\n  }\n\n  \n  handleSubmit(e){\n    e.preventDefault();\n\n    const video = this.fileLoader.current.files[0]\n    this.props.loadingOn();\n    uploadFile(video, config).then(\n      data => {\n\n        const post = {\n          title: this.state.title,\n          url: data.location,\n          nutrition: this.state.nutrition,\n          diet: this.state.diet,\n          ingredients: this.state.ingredients\n        }\n        this.props.createPost(post).then(() => {\n           this.props.loadingOff();\n           this.props.clearPostErrors();\n           this.props.history.push('/feed')\n        })\n      }\n\n    ).catch(err => {\n      this.props.loadingOff()\n      console.log(err)\n    })\n  }\n\n  loaderSpinner(){\n    if (this.props.loading){\n      return (\n        <Loader type=\"Grid\" color=\"#ee82ee\" height={100} width={100} />          \n      )\n    }\n    return\n  }\n\n  optionify(category) {\n    const options = Object.keys(category).map(tag => {\n      return {key: tag, text: tag[0].toUpperCase() + tag.slice(1), value: tag}\n    })\n    options.pop();\n    return options\n  }\n\n\n  render() {\n\n    if (!this.props.diet) return null;\n    return (\n      <form className=\"post-form\" onSubmit={this.handleSubmit}>\n        {this.loaderSpinner()}\n\n      <div className=\"title-input-div\">\n      <label htmlFor=\"post-title\">Enter a title:</label>\n       <input\n        id=\"post-title\" \n        type=\"text\" \n        value={this.state.title}\n        onChange={this.changeTitle}/>  \n        {this.errors(\"title\")}\n      </div>\n\n      <div className=\"vid-input-div\">\n          <input \n          id=\"video-input\"\n          type=\"file\" \n          ref={this.fileLoader}\n          accept=\"video/*\"/>\n          \n       </div>\n\n        <label> Diet/Restrictions: \n          <Dropdown \n            placeholder='Diet'\n            fluid\n            multiple\n            search\n            selection\n            options={this.optionify(this.props.diet)}\n            onChange={this.handleTag}\n          />\n        </label>\n\n         <label> Nutrition: \n        <Dropdown \n          placeholder='Nutrition'\n          fluid\n          multiple\n          search\n          selection\n          options={this.optionify(this.props.nutrition)}\n          onChange={this.handleTag}\n        />\n        </label>\n\n        <label>Ingredients:\n        <Dropdown \n          placeholder='Ingredients'\n          fluid\n          multiple\n          search\n          selection\n          options={this.optionify(this.props.ingredients)}\n          onChange={this.handleTag}\n        /> \n        </label>\n        <input id=\"submit-post\" type=\"submit\" value=\"Submit Post\" />\n      </form>    \n    )\n  }\n\n}\n\nexport default CreatePostForm;\n\n"]},"metadata":{},"sourceType":"module"}