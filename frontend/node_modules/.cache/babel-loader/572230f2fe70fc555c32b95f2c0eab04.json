{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/session/login_form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginUser, clearSessionErrors } from \"../../actions/session_actions\";\nimport { openModal, closeModal } from \"../../actions/modal_actions\";\nimport \"./login_form.css\";\n\nconst LoginForm = () => {\n  _s();\n\n  const errors = useSelector(state => state.errors.session);\n  const dispatch = useDispatch();\n  const [username, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    dispatch(clearSessionErrors());\n  }, [clearSessionErrors]);\n\n  const handleSubmit = () => {\n    const userInfo = {\n      username,\n      password\n    };\n    dispatch(loginUser(userInfo)).then(() => dispatch(closeModal()));\n  };\n\n  const showErrors = () => {\n    if (!errors.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errors\",\n      children: errors.map((error, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errors-body\",\n        children: error\n      }, `error-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"menutube\",\n        children: \"Menutube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        \"data-error\": errors.length ? errors : null,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"login-username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUser(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        \"data-error\": errors.length ? errors : null,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          id: \"login-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-errors\",\n        children: showErrors()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Log In\",\n        className: \"session-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"footer-login\",\n          children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => dispatch(openModal(\"signup\")),\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"JkNlDafJ+J4j8K3tih1bLJSq4IU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/session/login_form.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","loginUser","clearSessionErrors","openModal","closeModal","LoginForm","errors","state","session","dispatch","username","setUser","password","setPassword","handleSubmit","userInfo","then","showErrors","length","map","error","i","e","target","value"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginUser, clearSessionErrors } from \"../../actions/session_actions\";\nimport { openModal, closeModal } from \"../../actions/modal_actions\";\nimport \"./login_form.css\";\n\nconst LoginForm = () => {\n  const errors = useSelector((state) => state.errors.session);\n\n  const dispatch = useDispatch();\n\n  const [username, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(clearSessionErrors());\n  }, [clearSessionErrors]);\n\n  const handleSubmit = () => {\n    const userInfo = { username, password };\n    dispatch(loginUser(userInfo)).then(() => dispatch(closeModal()));\n  };\n\n  const showErrors = () => {\n    if (!errors.length) return null;\n    return (\n      <div className=\"errors\">\n        {errors.map((error, i) => (\n          <p className=\"errors-body\" key={`error-${i}`}>\n            {error}\n          </p>\n        ))}\n      </div>\n    );\n  };\n  return (\n    <div className=\"login-wrapper\">\n      <form id=\"login-form\" onSubmit={handleSubmit}>\n        <h2 className=\"menutube\">Menutube</h2>\n\n        <div className=\"username\" data-error={errors.length ? errors : null}>\n          <label htmlFor=\"login-username\">Username</label>\n          <input\n            id=\"login-username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUser(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"password\" data-error={errors.length ? errors : null}>\n          <label htmlFor=\"login-password\">Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"login-password\"\n            required\n          />\n        </div>\n        <div className=\"signin-errors\">{showErrors()}</div>\n\n        <input type=\"submit\" value=\"Log In\" className=\"session-btn\" />\n\n        <div>\n          <span className=\"footer-login\">\n            Don't have an account?\n            <div className=\"footer-btn\">\n              <div onClick={() => dispatch(openModal(\"signup\"))}>Sign up</div>\n            </div>\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}