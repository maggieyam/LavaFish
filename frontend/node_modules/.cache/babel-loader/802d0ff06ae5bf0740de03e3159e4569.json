{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/calendar/calendar.js\";\nimport React from \"react\";\nimport Slot from \"./slot\";\nimport \"./calendar.css\";\nimport { connect } from 'react-redux';\nimport { fetchCalendar } from '../../actions/calendar_actions';\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCalendar(this.props.userId);\n  }\n\n  calText() {\n    return this.state.checked ? \"Close\" : \"Open\";\n  }\n\n  render() {\n    const day = dayName => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"dayname\",\n          children: dayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots\",\n          children: [/*#__PURE__*/_jsxDEV(Slot, {\n            className: `${dayName}-0`,\n            calId: this.props.calendar._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Slot, {\n            className: `${dayName}-1`,\n            calId: this.props.calendar._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Slot, {\n            className: `${dayName}-2`,\n            calId: this.props.calendar._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, dayName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cal-checkbox\",\n        onClick: () => this.setState({\n          checked: !this.state.checked\n        }),\n        children: [this.calText(), \" Calendar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), !this.state.checked ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"calendar\",\n          children: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"].map(dayName => {\n            return day(dayName);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mStP = state => ({\n  userId: state.session.userInfo.id,\n  calendar: state.entities.calendar\n});\n\nconst mDtP = dispatch => ({\n  fetchCalendar: userId => dispatch(fetchCalendar(userId))\n});\n\nexport default connect(mStP, mDtP)(Calendar);","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/calendar/calendar.js"],"names":["React","Slot","connect","fetchCalendar","Calendar","Component","constructor","props","state","checked","componentDidMount","userId","calText","render","day","dayName","calendar","_id","setState","map","mStP","session","userInfo","id","entities","mDtP","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Slot from \"./slot\";\nimport \"./calendar.css\";\nimport { connect } from 'react-redux';\nimport { fetchCalendar } from '../../actions/calendar_actions';\n\nclass Calendar extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {checked: false};\n  }\n\n  componentDidMount(){\n    this.props.fetchCalendar(this.props.userId)\n  }\n\n  calText(){\n    return this.state.checked ? \"Close\" : \"Open\"\n  }\n  \n  render() {\n\n    const day = (dayName) => {\n      return (\n        <li key={dayName}>\n          <h3 className=\"dayname\">{dayName}</h3>\n          <div className=\"slots\">\n            <Slot className={`${dayName}-0`} calId={this.props.calendar._id} />\n            <Slot className={`${dayName}-1`} calId={this.props.calendar._id}/>\n            <Slot className={`${dayName}-2`} calId={this.props.calendar._id}/>\n          </div>\n        </li>\n      );\n    };\n\n\n    return (\n      <>\n      <button id=\"cal-checkbox\" onClick={() => this.setState({checked: !this.state.checked})}>{this.calText()} Calendar</button>\n      \n      {(!this.state.checked) ? null : ( \n          <div className=\"calendar-wrapper\">\n            <ul className=\"calendar\">\n              {[\n                \"Sun\",\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thur\",\n                \"Fri\",\n                \"Sat\",\n              ].map((dayName) => {\n                return day(dayName);\n              })}\n            </ul>\n          </div>\n          )}\n      </>\n      );\n    };\n  }\n\n  const mStP = state => ({\n    userId: state.session.userInfo.id,\n    calendar: state.entities.calendar\n  })\n\n  const mDtP = dispatch => ({\n    fetchCalendar: userId => dispatch(fetchCalendar(userId))\n  })\n\n  export default connect(mStP, mDtP)(Calendar);\n"]},"metadata":{},"sourceType":"module"}