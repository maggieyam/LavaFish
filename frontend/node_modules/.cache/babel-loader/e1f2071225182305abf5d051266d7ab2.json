{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/posts/post_edit_form.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './create_post_form.css';\nimport './post_edit_form.css';\nimport Loader from 'react-loader-spinner';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst aws = require('../../config/aws');\n\nconst config = {\n  bucketName: aws.BUCKET_NAME,\n  region: 'us-east-1',\n  accessKeyId: aws.ID,\n  secretAccessKey: aws.SECRET\n};\n\nconst convertStepTimeToSeconds = step => {\n  const {\n    minutes,\n    seconds\n  } = step;\n  step[\"timestamp\"] = parseInt(minutes) * 60 + parseInt(seconds);\n  delete step[\"minutes\"];\n  delete step[\"seconds\"];\n  return step;\n};\n\nconst convertStepTimeToMinutesAndSeconds = step => {\n  const {\n    timestamp\n  } = step;\n  step[\"minutes\"] = Math.floor(timestamp / 60);\n  step[\"seconds\"] = timestamp % 60;\n  delete step[\"timestamp\"];\n  return step;\n};\n\nconst filterOutFalseTags = tags => {\n  if (!tags) return {};\n  let newTags = {};\n  Object.keys(tags).forEach(tag => {\n    // Save the tags with truthy values\n    if (!!tags[tag]) newTags[tag] = tags[tag];\n  });\n  delete newTags[\"_id\"];\n  return newTags;\n};\n\nclass EditPostForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      steps: []\n    };\n    this.changeTitle = this.changeTitle.bind(this);\n    this.errors = this.errors.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loaderSpinner = this.loaderSpinner.bind(this);\n    this.fileLoader = /*#__PURE__*/React.createRef();\n    this.handleTag = this.handleTag.bind(this);\n    this.changeStep = this.changeStep.bind(this);\n    this.addStep = this.addStep.bind(this);\n    this.removeStep = this.removeStep.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTags();\n    this.props.fetchPost(this.props.match.params.id).then(({\n      post\n    }) => {\n      this.setState({\n        title: post.title,\n        steps: post.steps.map(step => convertStepTimeToMinutesAndSeconds(step)),\n        diet: filterOutFalseTags(post.diet),\n        nutrition: filterOutFalseTags(post.nutrition),\n        ingredients: filterOutFalseTags(post.ingredients)\n      });\n    });\n  }\n\n  changeTitle(e) {\n    e.preventDefault();\n    this.setState({\n      title: e.currentTarget.value\n    });\n  }\n\n  changeStep(e, type, idx) {\n    let {\n      steps\n    } = this.state;\n    steps[idx][type] = e.target.value;\n    this.setState({\n      steps\n    });\n  }\n\n  errors(field) {\n    if (this.props.errors[field]) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"posting-error\",\n        children: this.props.errors[field]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this);\n    }\n\n    return;\n  }\n\n  handleTag(e, data) {\n    const bools = {};\n    data.value.map(category => bools[category] = true);\n    this.setState({\n      [data.placeholder.toLowerCase()]: bools\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.loadingOn();\n    const editedPost = {\n      title: this.state.title,\n      steps: this.state.steps.map(step => convertStepTimeToSeconds(step)),\n      nutrition: this.state.nutrition,\n      diet: this.state.diet,\n      ingredients: this.state.ingredients\n    };\n    this.props.editPost(this.props.post._id, editedPost).then(() => {\n      this.props.loadingOff();\n      this.props.clearPostErrors();\n      this.props.history.push(`/show/${this.props.post._id}`);\n    });\n  }\n\n  loaderSpinner() {\n    if (this.props.loading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Grid\",\n        color: \"#E3E733\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n    }\n\n    return;\n  }\n\n  optionify(category) {\n    const options = Object.keys(category).map(tag => {\n      return {\n        key: tag,\n        text: tag[0].toUpperCase() + tag.slice(1),\n        value: tag\n      };\n    });\n    options.pop();\n    return options;\n  }\n\n  addStep() {\n    this.setState({\n      steps: this.state.steps.concat([{\n        description: \"\",\n        minutes: 0,\n        seconds: 0\n      }])\n    });\n  }\n\n  removeStep(e, idx) {\n    e.preventDefault();\n    let {\n      steps\n    } = this.state;\n    steps.splice(idx, 1);\n    this.setState({\n      steps\n    });\n  }\n\n  render() {\n    if (!this.state.diet) return null;\n    const {\n      steps\n    } = this.state;\n\n    const stepsList = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-input-div\",\n      children: [steps.map(({\n        minutes,\n        seconds,\n        description\n      }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"step-minutes-input\",\n          type: \"number\",\n          max: \"19\",\n          min: \"0\",\n          value: minutes > 9 ? minutes : `0${minutes}`,\n          onChange: e => this.changeStep(e, \"minutes\", idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time-hyphen\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"step-seconds-input\",\n          type: \"number\",\n          max: \"59\",\n          min: \"0\",\n          value: seconds > 9 ? seconds : `0${seconds}`,\n          onChange: e => this.changeStep(e, \"seconds\", idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"step-description-input\",\n          type: \"text\",\n          maxLength: \"100\",\n          value: description,\n          onChange: e => this.changeStep(e, \"description\", idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `remove-step-button ${idx % 2 === 0 ? \"even\" : \"odd\"}-button`,\n          onClick: e => this.removeStep(e, idx),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add-step-button\",\n        type: \"button\",\n        onClick: this.addStep,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: steps.length === 0 ? \"Begin adding steps\" : \"Add another step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-post-contents\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post-form\",\n        onSubmit: this.handleSubmit,\n        children: [this.loaderSpinner(), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"post-form-title\",\n          children: `Make Changes to \"${this.props.post.title}\" `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"post-title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"post-title\",\n            type: \"text\",\n            value: this.state.title,\n            onChange: this.changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), this.errors(\"title\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Diet/Restrictions:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Diet\",\n            fluid: true,\n            multiple: true,\n            search: true,\n            selection: true,\n            closeOnChange: true,\n            options: this.optionify(this.props.diet),\n            value: Object.keys(this.state.diet),\n            onChange: this.handleTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Nutrition:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Nutrition\",\n            fluid: true,\n            multiple: true,\n            search: true,\n            selection: true,\n            options: this.optionify(this.props.nutrition),\n            value: Object.keys(this.state.nutrition),\n            onChange: this.handleTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Ingredients\",\n            fluid: true,\n            multiple: true,\n            search: true,\n            selection: true,\n            options: this.optionify(this.props.ingredients),\n            value: Object.keys(this.state.ingredients),\n            onChange: this.handleTag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), stepsList, /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"edit-post\",\n          type: \"submit\",\n          value: \"Apply Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(EditPostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/posts/post_edit_form.jsx"],"names":["React","withRouter","Loader","Dropdown","aws","require","config","bucketName","BUCKET_NAME","region","accessKeyId","ID","secretAccessKey","SECRET","convertStepTimeToSeconds","step","minutes","seconds","parseInt","convertStepTimeToMinutesAndSeconds","timestamp","Math","floor","filterOutFalseTags","tags","newTags","Object","keys","forEach","tag","EditPostForm","Component","constructor","props","state","title","steps","changeTitle","bind","errors","handleSubmit","loaderSpinner","fileLoader","createRef","handleTag","changeStep","addStep","removeStep","componentDidMount","fetchTags","fetchPost","match","params","id","then","post","setState","map","diet","nutrition","ingredients","e","preventDefault","currentTarget","value","type","idx","target","field","data","bools","category","placeholder","toLowerCase","loadingOn","editedPost","editPost","_id","loadingOff","clearPostErrors","history","push","loading","optionify","options","key","text","toUpperCase","slice","pop","concat","description","splice","render","stepsList","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './create_post_form.css';\nimport './post_edit_form.css';\nimport Loader from 'react-loader-spinner';\nimport { Dropdown } from 'semantic-ui-react';\nconst aws = require('../../config/aws');\n\nconst config = {\n  bucketName: aws.BUCKET_NAME,\n  region: 'us-east-1',\n  accessKeyId: aws.ID,\n  secretAccessKey: aws.SECRET,\n}\n\nconst convertStepTimeToSeconds = step => {\n  const { minutes, seconds } = step;\n  step[\"timestamp\"] = (parseInt(minutes) * 60) + parseInt(seconds); \n  delete step[\"minutes\"];\n  delete step[\"seconds\"];\n  return step;\n}\n\nconst convertStepTimeToMinutesAndSeconds = step => {\n  const { timestamp } = step;\n  step[\"minutes\"] = Math.floor(timestamp / 60);\n  step[\"seconds\"] = timestamp % 60;\n  delete step[\"timestamp\"];\n  return step;\n}\n\nconst filterOutFalseTags = tags => {\n  if (!tags) return {};\n  let newTags = {};\n  Object.keys(tags).forEach(tag => {\n    // Save the tags with truthy values\n    if (!!tags[tag]) newTags[tag] = tags[tag];\n  })\n  delete newTags[\"_id\"];\n  return newTags;\n}\n\nclass EditPostForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      steps: []\n    }\n    this.changeTitle = this.changeTitle.bind(this);\n    this.errors = this.errors.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loaderSpinner = this.loaderSpinner.bind(this);\n    this.fileLoader = React.createRef();\n    this.handleTag = this.handleTag.bind(this);\n    this.changeStep = this.changeStep.bind(this);\n    this.addStep = this.addStep.bind(this);\n    this.removeStep = this.removeStep.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTags();\n    this.props.fetchPost(this.props.match.params.id).then(({post}) => {\n      this.setState({\n        title: post.title,\n        steps: post.steps.map(step => convertStepTimeToMinutesAndSeconds(step)),\n        diet: filterOutFalseTags(post.diet),\n        nutrition: filterOutFalseTags(post.nutrition),\n        ingredients: filterOutFalseTags(post.ingredients)\n      })\n    });\n  }\n\n  changeTitle(e) {\n    e.preventDefault();\n    this.setState({ title: e.currentTarget.value });\n  }\n\n  changeStep(e, type, idx) {\n    let { steps } = this.state;\n    steps[idx][type] = e.target.value;\n    this.setState({ steps });\n  }\n\n  errors(field) {\n    if (this.props.errors[field]) {\n      return <p className=\"posting-error\">{this.props.errors[field]}</p>\n    }\n    return\n  }\n\n  handleTag(e, data) {\n    const bools = {};\n    data.value.map(category => bools[category] = true);\n    this.setState({ [data.placeholder.toLowerCase()]: bools })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.loadingOn();\n    const editedPost = {\n      title: this.state.title,\n      steps: this.state.steps.map(step => convertStepTimeToSeconds(step)),\n      nutrition: this.state.nutrition,\n      diet: this.state.diet,\n      ingredients: this.state.ingredients\n    }\n    this.props.editPost(this.props.post._id, editedPost).then(() => {\n      this.props.loadingOff();\n      this.props.clearPostErrors();\n      this.props.history.push(`/show/${this.props.post._id}`);\n    })\n  }\n\n  loaderSpinner() {\n    if (this.props.loading) {\n      return (\n        <Loader type=\"Grid\" color=\"#E3E733\" height={100} width={100} />\n      )\n    }\n    return\n  }\n\n  optionify(category) {\n    const options = Object.keys(category).map(tag => {\n      return { key: tag, text: tag[0].toUpperCase() + tag.slice(1), value: tag }\n    })\n    options.pop();\n    return options\n  }\n\n  addStep() {\n    this.setState({\n      steps: this.state.steps.concat([{\n        description: \"\",\n        minutes: 0,\n        seconds: 0\n      }])\n    })\n  }\n\n  removeStep(e, idx) {\n    e.preventDefault();\n    let { steps } = this.state;\n    steps.splice(idx, 1);\n    this.setState({ steps });\n  }\n\n  render() {\n    if (!this.state.diet) return null;\n    \n    const { steps } = this.state;\n    const stepsList = (\n      <div className=\"steps-input-div\">\n          {steps.map(({minutes, seconds, description}, idx) => (\n              <div key={idx} className=\"step\">\n                <input className=\"step-minutes-input\"\n                  type=\"number\" max=\"19\" min=\"0\"\n                  value={minutes > 9 ? minutes : `0${minutes}`}\n                  onChange={e => this.changeStep(e, \"minutes\", idx)}/>\n                <p className=\"time-hyphen\">:</p>\n                <input className=\"step-seconds-input\"\n                  type=\"number\" max=\"59\" min=\"0\"\n                  value={seconds > 9 ? seconds : `0${seconds}`}\n                  onChange={e => this.changeStep(e, \"seconds\", idx)}\n                />\n                <input className=\"step-description-input\"\n                  type=\"text\" maxLength=\"100\" value={description}\n                  onChange={e => this.changeStep(e, \"description\", idx)}\n                />\n                <button\n                  type=\"button\"\n                  className={`remove-step-button ${idx % 2 === 0 ? \"even\" : \"odd\"}-button`}\n                  onClick={e => this.removeStep(e, idx)}\n                ><p>Remove</p></button>\n              </div>\n            )\n          )}\n          <button id=\"add-step-button\" type=\"button\" onClick={this.addStep}>\n            <p>{steps.length === 0 ? \"Begin adding steps\" : \"Add another step\"}</p>\n          </button>\n      </div>\n    )\n    \n    return (\n      <div className=\"edit-post-contents\">\n        <form className=\"post-form\" onSubmit={this.handleSubmit}>\n          {this.loaderSpinner()}\n          <h1 id=\"post-form-title\">{`Make Changes to \"${this.props.post.title}\" `}</h1>\n          <div className=\"title-input-div\">\n            <label htmlFor=\"post-title\">Title:</label>\n            <input\n              id=\"post-title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.changeTitle} />\n            {this.errors(\"title\")}\n          </div>\n\n          <label> Diet/Restrictions:\n            <Dropdown\n              placeholder='Diet'\n              fluid\n              multiple\n              search\n              selection\n              closeOnChange\n              options={this.optionify(this.props.diet)}\n              value={Object.keys(this.state.diet)}\n              onChange={this.handleTag}\n            />\n          </label>\n\n          <label> Nutrition:\n            <Dropdown\n              placeholder='Nutrition'\n              fluid\n              multiple\n              search\n              selection\n              options={this.optionify(this.props.nutrition)}\n              value={Object.keys(this.state.nutrition)}\n              onChange={this.handleTag}\n            />\n          </label>\n\n          <label>Ingredients:\n            <Dropdown\n              placeholder='Ingredients'\n              fluid\n              multiple\n              search\n              selection\n              options={this.optionify(this.props.ingredients)}\n              value={Object.keys(this.state.ingredients)}\n              onChange={this.handleTag}\n            />\n          </label>\n\n          {stepsList}\n\n          <input id=\"edit-post\" type=\"submit\" value=\"Apply Changes\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default withRouter(EditPostForm);"]},"metadata":{},"sourceType":"module"}