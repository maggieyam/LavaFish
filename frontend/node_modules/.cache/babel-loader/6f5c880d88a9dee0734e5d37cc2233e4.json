{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/comments/comments.jsx\";\nimport React from 'react';\nimport \"./comments.css\";\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentBody: \"\"\n    };\n    this.submitComment = this.submitComment.bind(this);\n    this.updateBody = this.updateBody.bind(this);\n    this.deleteButton = this.deleteButton.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n  }\n\n  deleteButton(postId, commentId) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comment-delete\",\n      onClick: () => this.deleteComment(postId, commentId),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  deleteComment(postId, commentId) {\n    this.props.deleteComment(postId, commentId);\n  }\n\n  submitComment(e) {\n    e.preventDefault();\n    this.props.createComment(this.state.commentBody, this.props.post._id).then(() => this.setState({\n      commentBody: \"\"\n    }));\n  }\n\n  updateBody(e) {\n    this.setState({\n      commentBody: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      post,\n      currentUser\n    } = this.props;\n    if (post.comments.length > 0 && !post.comments[0].user) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"comments-header\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comment-list\",\n        children: post.comments.map((comment, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment-body\",\n              children: comment.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-col-right\",\n              children: [currentUser !== comment.user._id ? null : this.deleteButton(post._id, comment._id), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"comment-author\",\n                children: [\"by \", comment.user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-comment\",\n        onSubmit: this.submitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Add Comment\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"comment-bod\",\n            value: this.state.commentBody,\n            onChange: this.updateBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/comments/comments.jsx"],"names":["React","Comments","Component","constructor","props","state","commentBody","submitComment","bind","updateBody","deleteButton","deleteComment","postId","commentId","e","preventDefault","createComment","post","_id","then","setState","target","value","render","currentUser","comments","length","user","map","comment","i","body","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDE,EAAAA,YAAY,CAACE,MAAD,EAASC,SAAT,EAAmB;AAC7B,wBAAO;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAM,KAAKF,aAAL,CAAmBC,MAAnB,EAA2BC,SAA3B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDF,EAAAA,aAAa,CAACC,MAAD,EAASC,SAAT,EAAmB;AAC9B,SAAKT,KAAL,CAAWO,aAAX,CAAyBC,MAAzB,EAAiCC,SAAjC;AACD;;AAEDN,EAAAA,aAAa,CAACO,CAAD,EAAG;AACdA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKX,KAAL,CAAWY,aAAX,CAAyB,KAAKX,KAAL,CAAWC,WAApC,EAAiD,KAAKF,KAAL,CAAWa,IAAX,CAAgBC,GAAjE,EACGC,IADH,CACQ,MAAM,KAAKC,QAAL,CAAc;AAACd,MAAAA,WAAW,EAAE;AAAd,KAAd,CADd;AAED;;AAEAG,EAAAA,UAAU,CAACK,CAAD,EAAG;AACZ,SAAKM,QAAL,CAAc;AAACd,MAAAA,WAAW,EAAEQ,CAAC,CAACO,MAAF,CAASC;AAAvB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACN,MAAAA,IAAD;AAAOO,MAAAA;AAAP,QAAsB,KAAKpB,KAAjC;AAEA,QAAIa,IAAI,CAACQ,QAAL,CAAcC,MAAd,GAAuB,CAAvB,IAA4B,CAACT,IAAI,CAACQ,QAAL,CAAc,CAAd,EAAiBE,IAAlD,EAAwD,OAAO,IAAP;AAExD,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBACGV,IAAI,CAACQ,QAAL,CAAcG,GAAd,CAAkB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACjC,8BACE;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,cAAb;AAAA,wBAA6BD,OAAO,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,yBACGP,WAAW,KAAKK,OAAO,CAACF,IAAR,CAAaT,GAA7B,GAAmC,IAAnC,GAA0C,KAAKR,YAAL,CAAkBO,IAAI,CAACC,GAAvB,EAA4BW,OAAO,CAACX,GAApC,CAD7C,eAEE;AAAG,gBAAA,SAAS,EAAC,gBAAb;AAAA,kCAAkCW,OAAO,CAACF,IAAR,CAAaK,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAkCF,CAAlC;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKvB,aAA7C;AAAA,gCACA;AAAA,kDACE;AAAU,YAAA,SAAS,EAAC,aAApB;AAAkC,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,WAApD;AAAiE,YAAA,QAAQ,EAAE,KAAKG;AAAhF;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA3DoC;;AA+DvC,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport \"./comments.css\";\n\nclass Comments extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {commentBody: \"\"};\n    this.submitComment = this.submitComment.bind(this);\n    this.updateBody = this.updateBody.bind(this);\n    this.deleteButton = this.deleteButton.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n  }\n\n  deleteButton(postId, commentId){\n    return <button className=\"comment-delete\" onClick={() => this.deleteComment(postId, commentId)}>Delete</button>\n  }\n\n  deleteComment(postId, commentId){\n    this.props.deleteComment(postId, commentId);\n  }\n\n  submitComment(e){\n    e.preventDefault();\n    this.props.createComment(this.state.commentBody, this.props.post._id)\n      .then(() => this.setState({commentBody: \"\"}))\n  }\n\n   updateBody(e){\n    this.setState({commentBody: e.target.value})\n  }\n\n  render() {\n    const {post, currentUser} = this.props;\n\n    if (post.comments.length > 0 && !post.comments[0].user) return null;\n\n    return (\n      <div className=\"comments-section\">\n        <h2 className=\"comments-header\">Comments</h2>\n        <ul className=\"comment-list\">\n          {post.comments.map((comment, i) => {\n            return (\n              <li className=\"comment-info\" key={i}>\n                <p className=\"comment-body\">{comment.body}</p> \n                <div className=\"comment-col-right\">\n                  {currentUser !== comment.user._id ? null : this.deleteButton(post._id, comment._id)}\n                  <p className=\"comment-author\">by {comment.user.username}</p>\n                </div>\n              </li>\n            )\n          })}\n        </ul>\n        \n        <form className=\"add-comment\" onSubmit={this.submitComment}>\n        <label> Add Comment\n          <textarea className=\"comment-bod\" value={this.state.commentBody} onChange={this.updateBody}></textarea>\n        </label>\n        <input type=\"submit\" value=\"Submit\"/>\n        </form>\n     </div>\n    )\n  }\n\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}