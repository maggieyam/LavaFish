{"ast":null,"code":"import { RECEIVE_POST, RECEIVE_POSTS, RECEIVE_NEW_POST, REMOVE_POST } from \"../actions/post_actions\";\nexport default ((state = {}, action) => {\n  Object.freeze(state);\n\n  switch (action.type) {\n    case RECEIVE_NEW_POST:\n      return { ...state,\n        [action.post.data._id]: action.post.data\n      };\n\n    case RECEIVE_POSTS:\n      return action.posts.posts;\n\n    case RECEIVE_POST:\n      // debugger\n      return { ...state,\n        [action.post._id]: action.post\n      };\n\n    case REMOVE_POST:\n      // debugger\n      let nextState = Object.assign({}, state);\n      delete nextState[action.postId.data]; // debugger\n\n      return nextState;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/reducers/posts_reducer.js"],"names":["RECEIVE_POST","RECEIVE_POSTS","RECEIVE_NEW_POST","REMOVE_POST","state","action","Object","freeze","type","post","data","_id","posts","nextState","assign","postId"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,WAJF,QAKO,yBALP;AAOA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrCC,EAAAA,MAAM,CAACC,MAAP,CAAcH,KAAd;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAKN,gBAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACI,IAAP,CAAYC,IAAZ,CAAiBC,GAAlB,GAAwBN,MAAM,CAACI,IAAP,CAAYC;AAAhD,OAAP;;AACF,SAAKT,aAAL;AACE,aAAOI,MAAM,CAACO,KAAP,CAAaA,KAApB;;AACF,SAAKZ,YAAL;AACE;AACA,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACI,IAAP,CAAYE,GAAb,GAAmBN,MAAM,CAACI;AAAtC,OAAP;;AAEF,SAAKN,WAAL;AACE;AACA,UAAIU,SAAS,GAAGP,MAAM,CAACQ,MAAP,CAAc,EAAd,EAAkBV,KAAlB,CAAhB;AACA,aAAOS,SAAS,CAACR,MAAM,CAACU,MAAP,CAAcL,IAAf,CAAhB,CAHF,CAIE;;AACA,aAAOG,SAAP;;AACF;AACE,aAAOT,KAAP;AAhBJ;AAkBD,CApBD","sourcesContent":["import {\n  RECEIVE_POST,\n  RECEIVE_POSTS,\n  RECEIVE_NEW_POST,\n  REMOVE_POST,\n} from \"../actions/post_actions\";\n\nexport default (state = {}, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_NEW_POST:\n      return { ...state, [action.post.data._id]: action.post.data };\n    case RECEIVE_POSTS:\n      return action.posts.posts;\n    case RECEIVE_POST:\n      // debugger\n      return { ...state, [action.post._id]: action.post };\n      \n    case REMOVE_POST:\n      // debugger\n      let nextState = Object.assign({}, state);\n      delete nextState[action.postId.data];\n      // debugger\n      return nextState;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}