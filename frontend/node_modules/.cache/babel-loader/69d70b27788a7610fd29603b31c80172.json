{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/videos/feed_video.jsx\";\nimport React from \"react\";\nimport ReactPlayer from \"react-player/file\";\nimport \"./feed_video.css\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport DraggableVideo from \"../calendar/draggablevideo\";\nimport { unsavePost, savePost } from '../../actions/post_actions';\nimport { connect } from 'react-redux';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n      muted: true\n    };\n    this.vidRef = /*#__PURE__*/React.createRef();\n    this.jumpToTime = this.jumpToTime.bind(this);\n    this.saveVid = this.saveVid.bind(this);\n    this.unsaveVid = this.unsaveVid.bind(this);\n    this.toggleSave = this.toggleSave.bind(this);\n    this.playVid = this.playVid.bind(this);\n    this.pauseVid = this.pauseVid.bind(this);\n  } // formatSeconds(secs) {\n  //   let remainingSecs = secs % 60;\n  //   let remainingMins = Math.floor(secs / 60);\n  //   if (remainingSecs < 10) {\n  //     remainingSecs = \"0\" + remainingSecs;\n  //   }\n  //   return `${remainingMins}:${remainingSecs}`;\n  // }\n\n\n  jumpToTime(secs) {\n    if (this.vidRef.current) {\n      this.vidRef.current.seekTo(secs);\n    }\n  }\n\n  playVid() {\n    this.setState({\n      playing: true,\n      muted: false\n    });\n  }\n\n  pauseVid() {\n    this.setState({\n      playing: false,\n      muted: true\n    });\n  }\n\n  saveVid() {\n    const body = {\n      userId: this.props.userId\n    };\n    this.props.savePost(this.props._id, body);\n  }\n\n  unsaveVid() {\n    this.props.unsavePost(this.props._id, this.props.userId);\n  }\n\n  toggleSave() {\n    this.props.isSaved ? this.unsaveVid() : this.saveVid();\n  }\n\n  render() {\n    const {\n      isSaved,\n      openCalendar\n    } = this.props;\n    const overlay = this.state.playing ?\n    /*#__PURE__*/\n    // <div className=\"playing-container\">\n    _jsxDEV(\"div\", {\n      className: \"playing-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) // </div>\n    :\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"paused-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `vedio-border ${openCalendar ? \"vertical\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dragvideo-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(DraggableVideo, {\n          id: this.props._id,\n          contents: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            onMouseEnter: this.playVid,\n            onMouseLeave: this.pauseVid,\n            children: [overlay, /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              className: \"react-player\",\n              ref: this.vidRef,\n              url: this.props.url,\n              playing: this.state.playing,\n              muted: this.state.muted,\n              height: \"inherit\",\n              width: \"inherit\",\n              config: {\n                file: {\n                  attributes: {\n                    controlsList: [\"nodownload\"],\n                    disablePictureInPicture: true\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"labels\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/show/${this.props._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"title\",\n            children: this.props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"username\",\n          children: [\"by \", this.props.user ? this.props.user.username : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: this.toggleSave,\n          children: isSaved ? \"Unsave\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mStP = (state, ownProps) => {\n  return {\n    userId: state.session.userInfo.id,\n    isSaved: state.session.userInfo.saved.includes(ownProps._id),\n    openCalendar: state.ui.openCalendar\n  };\n};\n\nconst mDtP = dispatch => ({\n  savePost: (postId, body) => dispatch(savePost(postId, body)),\n  unsavePost: (postId, userId) => dispatch(unsavePost(postId, userId))\n});\n\nexport default withRouter(connect(mStP, mDtP)(VideoPlayer));","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/videos/feed_video.jsx"],"names":["React","ReactPlayer","withRouter","Link","DraggableVideo","unsavePost","savePost","connect","VideoPlayer","Component","constructor","props","state","playing","muted","vidRef","createRef","jumpToTime","bind","saveVid","unsaveVid","toggleSave","playVid","pauseVid","secs","current","seekTo","setState","body","userId","_id","isSaved","render","openCalendar","overlay","url","file","attributes","controlsList","disablePictureInPicture","title","user","username","mStP","ownProps","session","userInfo","id","saved","includes","ui","mDtP","dispatch","postId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactPlayer from \"react-player/file\";\nimport \"./feed_video.css\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport DraggableVideo from \"../calendar/draggablevideo\";\nimport {unsavePost, savePost} from '../../actions/post_actions';\nimport {connect} from 'react-redux';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      playing: false,\n      muted: true,\n    };\n\n    this.vidRef = React.createRef();\n\n    this.jumpToTime = this.jumpToTime.bind(this);\n    this.saveVid = this.saveVid.bind(this);\n    this.unsaveVid = this.unsaveVid.bind(this);\n    this.toggleSave = this.toggleSave.bind(this);\n    this.playVid = this.playVid.bind(this);\n    this.pauseVid = this.pauseVid.bind(this);\n\n  }\n\n\n  // formatSeconds(secs) {\n  //   let remainingSecs = secs % 60;\n  //   let remainingMins = Math.floor(secs / 60);\n  //   if (remainingSecs < 10) {\n  //     remainingSecs = \"0\" + remainingSecs;\n  //   }\n  //   return `${remainingMins}:${remainingSecs}`;\n  // }\n\n  jumpToTime(secs) {\n    if (this.vidRef.current) {\n      this.vidRef.current.seekTo(secs);\n    }\n  }\n\n  playVid() {\n    this.setState({\n      playing: true,\n      muted: false,\n    });\n  }\n\n  pauseVid() {\n    this.setState({\n      playing: false,\n      muted: true,\n    });\n  }\n\n  saveVid() {\n   const body = {userId: this.props.userId}\n   this.props.savePost(this.props._id, body)\n  }\n\n  unsaveVid(){\n    this.props.unsavePost(this.props._id, this.props.userId);\n  }\n\n  toggleSave(){\n    this.props.isSaved ? this.unsaveVid() : this.saveVid();\n  }\n\n  render() {\n\n    const {isSaved, openCalendar} = this.props;\n\n    const overlay = this.state.playing ? (\n      // <div className=\"playing-container\">\n        <div className=\"playing-overlay\">\n          \n        </div>\n      // </div>\n    ) : (\n      <div className=\"paused-overlay\">     \n      </div>\n    );\n\n    return (\n      <div className={`vedio-border ${openCalendar ? \"vertical\" : \"\"}`}>\n      <div className=\"dragvideo-wrapper\">\n        <DraggableVideo id={this.props._id} \n        contents={\n        <div\n          className=\"video-container\"\n          onMouseEnter={this.playVid}\n          onMouseLeave={this.pauseVid}\n        >\n        {overlay}\n        \n        <ReactPlayer\n          className=\"react-player\"\n          ref={this.vidRef}\n          url={this.props.url}\n          playing={this.state.playing}\n          muted={this.state.muted}\n          height={\"inherit\"}\n          width={\"inherit\"}\n          config={{\n            file: {\n              attributes: {\n                controlsList: [\"nodownload\"],\n                disablePictureInPicture: true,\n              },\n            },\n          }}\n          />\n          \n        </div>\n        }/>\n        </div>\n        \n        <div id=\"labels\">\n          \n          <Link to={`/show/${this.props._id}`}>\n            <h1 id=\"title\">{this.props.title}</h1>\n          </Link>\n          <p id=\"username\">by {this.props.user ? this.props.user.username : \"\"}</p>\n          <button className=\"save-btn\" onClick={this.toggleSave}>\n            {isSaved ? \"Unsave\" : \"Save\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mStP = (state, ownProps) => {\n  return {\n  userId: state.session.userInfo.id,\n  isSaved: state.session.userInfo.saved.includes(ownProps._id),\n  openCalendar: state.ui.openCalendar\n}}\n\nconst mDtP = dispatch => ({\n  savePost: (postId, body) => dispatch(savePost(postId, body)),\n  unsavePost: (postId, userId) => dispatch(unsavePost(postId, userId))\n})\n\n\n\nexport default withRouter(connect(mStP, mDtP)(VideoPlayer));\n"]},"metadata":{},"sourceType":"module"}