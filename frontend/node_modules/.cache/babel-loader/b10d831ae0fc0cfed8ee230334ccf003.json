{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { fetchPost, deletePost } from \"../../actions/post_actions\";\nimport PostShow from \"./post_show\";\nimport { receiveCurrentUser } from '../../actions/session_actions';\n\nconst mSTP = (state, ownProps) => ({\n  post: state.entities.posts[ownProps.match.params.id],\n  currentUser: state.entites.session.userInfo[ownProps.match.params.id]\n});\n\nconst mDTP = dispatch => ({\n  fetchPost: postId => dispatch(fetchPost(postId)),\n  deletePost: postId => dispatch(deletePost(postId)),\n  currentUser: user => dispatch(receiveCurrentUser(user))\n});\n\nexport default connect(mSTP, mDTP)(PostShow);","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/posts/post_show_container.js"],"names":["connect","fetchPost","deletePost","PostShow","receiveCurrentUser","mSTP","state","ownProps","post","entities","posts","match","params","id","currentUser","entites","session","userInfo","mDTP","dispatch","postId","user"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,4BAAtC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,kBAAR,QAAiC,+BAAjC;;AACA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AACjCC,EAAAA,IAAI,EAAEF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBC,EAA3C,CAD2B;AAEjCC,EAAAA,WAAW,EAAER,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC,QAAtB,CAA+BV,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBC,EAArD;AAFoB,CAAtB,CAAb;;AAKA,MAAMK,IAAI,GAAIC,QAAD,KAAe;AAC1BlB,EAAAA,SAAS,EAAGmB,MAAD,IAAYD,QAAQ,CAAClB,SAAS,CAACmB,MAAD,CAAV,CADL;AAE1BlB,EAAAA,UAAU,EAAGkB,MAAD,IAAYD,QAAQ,CAACjB,UAAU,CAACkB,MAAD,CAAX,CAFN;AAG1BN,EAAAA,WAAW,EAAGO,IAAD,IAAUF,QAAQ,CAACf,kBAAkB,CAACiB,IAAD,CAAnB;AAHL,CAAf,CAAb;;AAMA,eAAerB,OAAO,CAACK,IAAD,EAAOa,IAAP,CAAP,CAAoBf,QAApB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { fetchPost, deletePost } from \"../../actions/post_actions\";\nimport PostShow from \"./post_show\";\nimport {receiveCurrentUser} from '../../actions/session_actions'\nconst mSTP = (state, ownProps) => ({\n  post: state.entities.posts[ownProps.match.params.id],\n  currentUser: state.entites.session.userInfo[ownProps.match.params.id]\n});\n\nconst mDTP = (dispatch) => ({\n  fetchPost: (postId) => dispatch(fetchPost(postId)),\n  deletePost: (postId) => dispatch(deletePost(postId)),\n  currentUser: (user) => dispatch(receiveCurrentUser(user))\n});\n\nexport default connect(mSTP, mDTP)(PostShow);\n"]},"metadata":{},"sourceType":"module"}