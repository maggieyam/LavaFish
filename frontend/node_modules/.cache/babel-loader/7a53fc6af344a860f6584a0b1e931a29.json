{"ast":null,"code":"export const findSavedPosts = (saved, posts) => {\n  if (!posts) return [];\n  return posts.filter(post => saved.includes(post._id));\n};\nexport const selectPosts = (filter, posts) => {\n  if (!posts) return [];\n  if (Object.keys(filter).length === 0) return Object.values(posts);\n  return Object.values(posts).filter(post => {\n    let match = true;\n    Object.entries(filter).forEach(([key, value]) => {\n      for (let i = 0; i < value.length; i++) {\n        if (!post[key] || !post[key][value[i]]) {\n          match = false;\n          break;\n        }\n      }\n    });\n    return match;\n  });\n};","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/util/selectors.js"],"names":["findSavedPosts","saved","posts","filter","post","includes","_id","selectPosts","Object","keys","length","values","match","entries","forEach","key","value","i"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9C,MAAI,CAACA,KAAL,EAAY,OAAO,EAAP;AACZ,SAAOA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIH,KAAK,CAACI,QAAN,CAAeD,IAAI,CAACE,GAApB,CAArB,CAAP;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACJ,MAAD,EAASD,KAAT,KAAmB;AAC5C,MAAI,CAACA,KAAL,EAAY,OAAO,EAAP;AACZ,MAAIM,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,KAA+B,CAAnC,EAAsC,OAAOF,MAAM,CAACG,MAAP,CAAcT,KAAd,CAAP;AAEtC,SAAOM,MAAM,CAACG,MAAP,CAAcT,KAAd,EAAqBC,MAArB,CACLC,IAAI,IAAI;AACN,QAAIQ,KAAK,GAAG,IAAZ;AACAJ,IAAAA,MAAM,CAACK,OAAP,CAAeV,MAAf,EAAuBW,OAAvB,CAA+B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAC/C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACN,MAA1B,EAAkCO,CAAC,EAAnC,EAAsC;AACpC,YAAI,CAACb,IAAI,CAACW,GAAD,CAAL,IAAc,CAACX,IAAI,CAACW,GAAD,CAAJ,CAAUC,KAAK,CAACC,CAAD,CAAf,CAAnB,EAAuC;AACrCL,UAAAA,KAAK,GAAG,KAAR;AACA;AACD;AACF;AACF,KAPD;AAQA,WAAOA,KAAP;AACD,GAZI,CAAP;AAcD,CAlBM","sourcesContent":["export const findSavedPosts = (saved, posts) => {\n  if (!posts) return [];\n  return posts.filter(post => saved.includes(post._id))\n}\n\nexport const selectPosts = (filter, posts) => {\n  if (!posts) return [];\n  if (Object.keys(filter).length === 0) return Object.values(posts);\n\n  return Object.values(posts).filter(\n    post => {\n      let match = true;\n      Object.entries(filter).forEach(([key, value]) => {\n        for (let i = 0; i < value.length; i++){\n          if (!post[key] || !post[key][value[i]]){\n            match = false;\n            break;\n          }\n        }\n      })\n      return match\n    }\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}