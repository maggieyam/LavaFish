{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/calendar/slot.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ReactPlayer from \"react-player/file\";\nimport DraggableVideo from \"./draggablevideo\";\nimport { addCalVideo, deleteCalVideo } from '../../actions/calendar_actions';\nimport { fetchPost } from '../../actions/post_actions';\n\nclass Slot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addVideo = this.addVideo.bind(this);\n    this.removeVideo = this.removeVideo.bind(this);\n    this.slotRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      video: !!this.props.postId\n    };\n    this.storedVideo = this.storedVideo.bind(this);\n    this.videoPlayer = this.videoPlayer.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.postId) {\n      this.props.fetchPost(this.props.postId);\n    }\n  }\n\n  videoPlayer() {\n    return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      className: \"react-player\",\n      url: this.props.post.url,\n      playing: true,\n      muted: true,\n      height: \"inherit\",\n      width: \"inherit\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => this.props.history.push(`/show/${this.props.postId}`),\n      config: {\n        file: {\n          attributes: {\n            controlsList: [\"nodownload\"],\n            disablePictureInPicture: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n\n  storedVideo() {\n    return /*#__PURE__*/_jsxDEV(DraggableVideo, {\n      id: this.props.postId,\n      date: this.props.date,\n      idx: this.props.idx,\n      contents: this.videoPlayer()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  addVideo(e) {\n    e.preventDefault();\n    if (this.props.post) return;\n    const {\n      date,\n      idx\n    } = this.props;\n    const {\n      postId,\n      formerDate,\n      formerIdx\n    } = JSON.parse(e.dataTransfer.getData('videoInfo'));\n    let body = {\n      date,\n      idx: parseInt(idx),\n      postId\n    };\n    this.props.addCalVideo(this.props.calId, body).then(() => {\n      if (formerDate && formerIdx && (formerDate !== date || formerIdx !== idx)) {\n        this.props.deleteCalVideo(this.props.calId, {\n          date: formerDate,\n          idx: formerIdx\n        });\n      }\n    });\n  }\n\n  dragOver(e) {\n    e.preventDefault();\n  }\n\n  removeVideo(e) {\n    e.preventDefault();\n    let {\n      date,\n      idx\n    } = this.props;\n    let body = {\n      date,\n      idx: parseInt(idx)\n    };\n    this.props.deleteCalVideo(this.props.calId, body);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slot ${this.props.className}`,\n      onDrop: this.addVideo,\n      onDragOver: this.dragOver,\n      ref: this.slotRef,\n      children: [this.props.post ? this.storedVideo() : null, this.props.post ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.removeVideo,\n        children: '\\u00D7'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 26\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mStP = (state, ownProps) => {\n  let [date, idx] = ownProps.className.split(\"-\");\n  let postId = state.entities.calendar[date][idx];\n  return {\n    date,\n    idx,\n    postId,\n    post: state.entities.posts[postId]\n  };\n};\n\nconst mDtP = dispatch => ({\n  addCalVideo: (calId, body) => dispatch(addCalVideo(calId, body)),\n  deleteCalVideo: (calId, body) => dispatch(deleteCalVideo(calId, body)),\n  fetchPost: postId => dispatch(fetchPost(postId))\n});\n\nexport default withRouter(connect(mStP, mDtP)(Slot));","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/components/calendar/slot.jsx"],"names":["React","connect","withRouter","ReactPlayer","DraggableVideo","addCalVideo","deleteCalVideo","fetchPost","Slot","Component","constructor","props","addVideo","bind","removeVideo","slotRef","createRef","state","video","postId","storedVideo","videoPlayer","componentDidMount","post","url","cursor","history","push","file","attributes","controlsList","disablePictureInPicture","date","idx","e","preventDefault","formerDate","formerIdx","JSON","parse","dataTransfer","getData","body","parseInt","calId","then","dragOver","render","className","mStP","ownProps","split","entities","calendar","posts","mDtP","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gCAA5C;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAIA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,OAAL,gBAAef,KAAK,CAACgB,SAAN,EAAf;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWQ;AAAtB,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKQ,WAAL,GAAmB,KAAKA,WAAL,CAAiBR,IAAjB,CAAsB,IAAtB,CAAnB;AAED;;AAEDS,EAAAA,iBAAiB,GAAE;AACjB,QAAI,KAAKX,KAAL,CAAWQ,MAAf,EAAuB;AACrB,WAAKR,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWQ,MAAhC;AACD;AACF;;AAEDE,EAAAA,WAAW,GAAG;AAEP,wBACA,QAAC,WAAD;AACC,MAAA,SAAS,EAAC,cADX;AAEC,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWY,IAAX,CAAgBC,GAFtB;AAGC,MAAA,OAAO,EAAE,IAHV;AAIC,MAAA,KAAK,EAAE,IAJR;AAKC,MAAA,MAAM,EAAE,SALT;AAMC,MAAA,KAAK,EAAE,SANR;AAOC,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAPR;AAQC,MAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAyB,SAAQ,KAAKhB,KAAL,CAAWQ,MAAO,EAAnD,CARhB;AASC,MAAA,MAAM,EAAE;AACNS,QAAAA,IAAI,EAAE;AACJC,UAAAA,UAAU,EAAE;AACVC,YAAAA,YAAY,EAAE,CAAC,YAAD,CADJ;AAEVC,YAAAA,uBAAuB,EAAE;AAFf;AADR;AADA;AATT;AAAA;AAAA;AAAA;AAAA,YADA;AAoBN;;AAEDX,EAAAA,WAAW,GAAE;AACX,wBACE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAE,KAAKT,KAAL,CAAWQ,MAA/B;AAAuC,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWqB,IAAxD;AAA8D,MAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWsB,GAA9E;AAAmF,MAAA,QAAQ,EAAE,KAAKZ,WAAL;AAA7F;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAGDT,EAAAA,QAAQ,CAACsB,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,KAAKxB,KAAL,CAAWY,IAAf,EAAqB;AACrB,UAAM;AAACS,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAc,KAAKtB,KAAzB;AACA,UAAM;AAAEQ,MAAAA,MAAF;AAAUiB,MAAAA,UAAV;AAAsBC,MAAAA;AAAtB,QAAoCC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,YAAF,CAAeC,OAAf,CAAuB,WAAvB,CAAX,CAA1C;AAEA,QAAIC,IAAI,GAAG;AACTV,MAAAA,IADS;AAETC,MAAAA,GAAG,EAAEU,QAAQ,CAACV,GAAD,CAFJ;AAGTd,MAAAA;AAHS,KAAX;AAMA,SAAKR,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWiC,KAAlC,EAAyCF,IAAzC,EAA+CG,IAA/C,CAAqD,MAAM;AAEzD,UAAKT,UAAU,IAAIC,SAAf,KAA8BD,UAAU,KAAKJ,IAAf,IAAuBK,SAAS,KAAKJ,GAAnE,CAAJ,EAA6E;AAC3E,aAAKtB,KAAL,CAAWL,cAAX,CAA0B,KAAKK,KAAL,CAAWiC,KAArC,EAA4C;AAACZ,UAAAA,IAAI,EAAEI,UAAP;AAAmBH,UAAAA,GAAG,EAAEI;AAAxB,SAA5C;AACD;AAEF,KAND;AAQD;;AAEDS,EAAAA,QAAQ,CAACZ,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAEDrB,EAAAA,WAAW,CAACoB,CAAD,EAAG;AACZA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAI;AAACH,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAc,KAAKtB,KAAvB;AACA,QAAI+B,IAAI,GAAG;AACTV,MAAAA,IADS;AAETC,MAAAA,GAAG,EAAEU,QAAQ,CAACV,GAAD;AAFJ,KAAX;AAIA,SAAKtB,KAAL,CAAWL,cAAX,CAA0B,KAAKK,KAAL,CAAWiC,KAArC,EAA4CF,IAA5C;AACD;;AAGDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,QAAO,KAAKpC,KAAL,CAAWqC,SAAU,EAA7C;AACE,MAAA,MAAM,EAAE,KAAKpC,QADf;AAEE,MAAA,UAAU,EAAE,KAAKkC,QAFnB;AAGE,MAAA,GAAG,EAAE,KAAK/B,OAHZ;AAAA,iBAII,KAAKJ,KAAL,CAAWY,IAAZ,GAAoB,KAAKH,WAAL,EAApB,GAAyC,IAJ5C,EAKC,KAAKT,KAAL,CAAWY,IAAX,gBAAkB;AAAQ,QAAA,OAAO,EAAE,KAAKT,WAAtB;AAAA,kBAAoC;AAApC;AAAA;AAAA;AAAA;AAAA,cAAlB,GAA2E,IAL5E;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlGgC;;AAqGnC,MAAMmC,IAAI,GAAG,CAAChC,KAAD,EAAQiC,QAAR,KAAqB;AAChC,MAAI,CAAClB,IAAD,EAAOC,GAAP,IAAciB,QAAQ,CAACF,SAAT,CAAmBG,KAAnB,CAAyB,GAAzB,CAAlB;AACA,MAAIhC,MAAM,GAAGF,KAAK,CAACmC,QAAN,CAAeC,QAAf,CAAwBrB,IAAxB,EAA8BC,GAA9B,CAAb;AACA,SAAO;AACLD,IAAAA,IADK;AAELC,IAAAA,GAFK;AAGLd,IAAAA,MAHK;AAILI,IAAAA,IAAI,EAAEN,KAAK,CAACmC,QAAN,CAAeE,KAAf,CAAqBnC,MAArB;AAJD,GAAP;AAMD,CATD;;AAWA,MAAMoC,IAAI,GAAGC,QAAQ,KAAK;AACxBnD,EAAAA,WAAW,EAAE,CAACuC,KAAD,EAAQF,IAAR,KAAiBc,QAAQ,CAACnD,WAAW,CAACuC,KAAD,EAAQF,IAAR,CAAZ,CADd;AAExBpC,EAAAA,cAAc,EAAE,CAACsC,KAAD,EAAQF,IAAR,KAAiBc,QAAQ,CAAClD,cAAc,CAACsC,KAAD,EAAQF,IAAR,CAAf,CAFjB;AAGxBnC,EAAAA,SAAS,EAAEY,MAAM,IAAIqC,QAAQ,CAACjD,SAAS,CAACY,MAAD,CAAV;AAHL,CAAL,CAArB;;AAMA,eAAejB,UAAU,CAACD,OAAO,CAACgD,IAAD,EAAOM,IAAP,CAAP,CAAoB/C,IAApB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ReactPlayer from \"react-player/file\";\nimport DraggableVideo from \"./draggablevideo\";\nimport { addCalVideo, deleteCalVideo } from '../../actions/calendar_actions';\nimport { fetchPost } from '../../actions/post_actions';\n\n\n\nclass Slot extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.addVideo = this.addVideo.bind(this);\n    this.removeVideo = this.removeVideo.bind(this);\n    this.slotRef = React.createRef();\n    this.state = { video: !!this.props.postId};\n    this.storedVideo = this.storedVideo.bind(this);\n    this.videoPlayer = this.videoPlayer.bind(this);\n    \n  }\n\n  componentDidMount(){\n    if (this.props.postId) {\n      this.props.fetchPost(this.props.postId);\n    }\n  }\n\n  videoPlayer() {\n\n         return (\n         <ReactPlayer\n          className=\"react-player\"\n          url={this.props.post.url}\n          playing={true}\n          muted={true}\n          height={\"inherit\"}\n          width={\"inherit\"}\n          style={{cursor: 'pointer'}}\n          onClick={() => this.props.history.push(`/show/${this.props.postId}`)}\n          config={{\n            file: {\n              attributes: {\n                controlsList: [\"nodownload\"],\n                disablePictureInPicture: true,\n              },\n            },\n          }}\n          />)\n      \n  }\n\n  storedVideo(){\n    return (\n      <DraggableVideo id={this.props.postId} date={this.props.date} idx={this.props.idx} contents={this.videoPlayer()}/>\n    )\n  }\n\n\n  addVideo(e){\n    e.preventDefault();\n    if (this.props.post) return;\n    const {date, idx} = this.props;\n    const { postId, formerDate, formerIdx } = JSON.parse(e.dataTransfer.getData('videoInfo'));\n\n    let body = {\n      date,\n      idx: parseInt(idx),\n      postId\n    }\n\n    this.props.addCalVideo(this.props.calId, body).then( () => {\n\n      if ((formerDate && formerIdx) && (formerDate !== date || formerIdx !== idx)) {\n        this.props.deleteCalVideo(this.props.calId, {date: formerDate, idx: formerIdx})\n      }\n\n    })\n\n  }\n\n  dragOver(e){\n    e.preventDefault()\n  }\n\n  removeVideo(e){\n    e.preventDefault();\n    \n    let {date, idx} = this.props;\n    let body = {\n      date,\n      idx: parseInt(idx),\n    }\n    this.props.deleteCalVideo(this.props.calId, body);\n  }\n\n\n  render() {\n    return (\n      <div className={`slot ${this.props.className}`}\n        onDrop={this.addVideo} \n        onDragOver={this.dragOver}\n        ref={this.slotRef}>\n        {(this.props.post) ? this.storedVideo() : null}\n      {this.props.post ? <button onClick={this.removeVideo}>{'\\u00D7'}</button> : null}\n      </div>\n    )\n  }\n}\n\nconst mStP = (state, ownProps) => {\n  let [date, idx] = ownProps.className.split(\"-\");\n  let postId = state.entities.calendar[date][idx];\n  return {\n    date,\n    idx,\n    postId,\n    post: state.entities.posts[postId]\n  }\n}\n\nconst mDtP = dispatch => ({\n  addCalVideo: (calId, body) => dispatch(addCalVideo(calId, body)),\n  deleteCalVideo: (calId, body) => dispatch(deleteCalVideo(calId, body)),\n  fetchPost: postId => dispatch(fetchPost(postId))\n})\n\nexport default withRouter(connect(mStP, mDtP)(Slot));"]},"metadata":{},"sourceType":"module"}