{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\nimport { openModal, closeModal } from './actions/modal_actions';\nimport { getSaved } from './actions/user_actions';\nimport axios from 'axios';\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const userInfo = jwt_decode(localStorage.jwtToken);\n    const preloadedState = {\n      session: {\n        isAuthenticated: true,\n        userInfo\n      }\n    };\n    store = configureStore(preloadedState);\n    const now = Date.now() / 1000;\n    store.dispatch(getSaved());\n\n    if (userInfo.exp < now) {\n      store.dispatch(logout()); // should we immediately redirect to log in?\n    }\n  } else {\n    store = configureStore({});\n  }\n\n  const root = document.getElementById('root');\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Root, {\n    store: store\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 19\n  }, this), root);\n});","map":{"version":3,"sources":["/Users/tony/Desktop/App_Academy/Mern/menutube/frontend/src/index.js"],"names":["React","ReactDOM","Root","configureStore","jwt_decode","setAuthToken","logout","openModal","closeModal","getSaved","axios","document","addEventListener","store","localStorage","jwtToken","userInfo","preloadedState","session","isAuthenticated","now","Date","dispatch","exp","root","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,yBAAtC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClD,MAAIC,KAAJ;;AAEA,MAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzBV,IAAAA,YAAY,CAACS,YAAY,CAACC,QAAd,CAAZ;AACA,UAAMC,QAAQ,GAAGZ,UAAU,CAACU,YAAY,CAACC,QAAd,CAA3B;AACA,UAAME,cAAc,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,eAAe,EAAE,IAAnB;AAAyBH,QAAAA;AAAzB;AAAX,KAAvB;AACAH,IAAAA,KAAK,GAAGV,cAAc,CAACc,cAAD,CAAtB;AACA,UAAMG,GAAG,GAAGC,IAAI,CAACD,GAAL,KAAa,IAAzB;AACAP,IAAAA,KAAK,CAACS,QAAN,CAAeb,QAAQ,EAAvB;;AAEA,QAAIO,QAAQ,CAACO,GAAT,GAAeH,GAAnB,EAAwB;AACtBP,MAAAA,KAAK,CAACS,QAAN,CAAehB,MAAM,EAArB,EADsB,CAEtB;AACD;AAEF,GAbD,MAaO;AACLO,IAAAA,KAAK,GAAGV,cAAc,CAAC,EAAD,CAAtB;AACD;;AAED,QAAMqB,IAAI,GAAGb,QAAQ,CAACc,cAAT,CAAwB,MAAxB,CAAb;AAEAxB,EAAAA,QAAQ,CAACyB,MAAT,eAAgB,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEb;AAAb;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAwCW,IAAxC;AAGD,CAzBD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\nimport { openModal, closeModal } from './actions/modal_actions';\nimport { getSaved } from './actions/user_actions';\nimport axios from 'axios';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const userInfo = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, userInfo}};\n    store = configureStore(preloadedState);\n    const now = Date.now() / 1000;\n    store.dispatch(getSaved())\n\n    if (userInfo.exp < now) {\n      store.dispatch(logout());\n      // should we immediately redirect to log in?\n    }\n\n  } else {\n    store = configureStore({});\n  }\n\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n\n\n})\n\n"]},"metadata":{},"sourceType":"module"}